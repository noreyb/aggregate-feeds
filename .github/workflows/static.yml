# Simple workflow for deploying static content to GitHub Pages
name: Update

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  schedule:
    - cron: "30 */6 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # update_nitter:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #     - uses: Gr1N/setup-poetry@v8
  #     - run: poetry install --no-root
  #     - run: POCKET_TOKEN=${{secrets.POCKET_TOKEN}} POCKET_CONSUMER_KEY=${{secrets.POCKET_CONSUMER_KEY}} PCLOUD_USERNAME=${{secrets.PCLOUD_USERNAME}} PCLOUD_PASSWORD=${{secrets.PCLOUD_PASSWORD}} poetry run python main.py nitter

  update_cmc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: Gr1N/setup-poetry@v8
      - run: poetry install --no-root
      - run: RAINDROP_TOKEN=${{secrets.RAINDROP_TOKEN}} RAINDROP_COMIC=${{secrets.RAINDROP_COMIC}} poetry run python main.py comic
      - name: Update feed
        continue-on-error: true
        run: |
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git add ./output/comic.xml
          git commit -m "update comic feed"
          git push origin main

  update_fdv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: Gr1N/setup-poetry@v8
      - run: poetry install --no-root
      - run: RAINDROP_TOKEN=${{secrets.RAINDROP_TOKEN}} RAINDROP_FEDIVERSE=${{secrets.RAINDROP_FEDIVERSE}} poetry run python main.py fediverse
      - name: Update feed
        continue-on-error: true
        run: |
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git add ./output/fediverse.xml
          git commit -m "update fediverse feed"
          git push origin main

  update_booru:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: Gr1N/setup-poetry@v8
      - run: poetry install --no-root
      - run: BOORU_BASE_URL=${{secrets.BOORU_BASE_URL}} BOORU_ENDPOINT=${{secrets.BOORU_ENDPOINT}} poetry run python main.py booru
      - name: Update feed
        continue-on-error: true
        run: |
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git add ./output/booru.xml
          git commit -m "update booru feeds"
          git push origin main
    
  update_kmn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: Gr1N/setup-poetry@v8
      - run: poetry install --no-root
      - run: KEMONO_BASE_URL=${{secrets.KEMONO_BASE_URL}} KEMONO_ENDPOINT=${{secrets.KEMONO_ENDPOINT}} poetry run python main.py kemono
      - name: Update feed
        continue-on-error: true
        run: |
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git add ./output/kemono.xml
          git commit -m "update kemono feeds"
          git push origin main